/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, September 15, 2015 at 5:29:43 PM Central Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /var/mobile/Containers/Bundle/Application/78EC956B-7ED8-4B50-8025-C2B1976EEC28/Instagram.app/Instagram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class IGUser, NSMutableSet, IGCookieStorage;

@interface IGAuthHelper : NSObject {

	IGUser* _currentUser;
	NSMutableSet* _authenticatedUsers;
	IGCookieStorage* _cookieStorage;

}

@property (nonatomic,retain) IGUser * currentUser;                           //@synthesize currentUser=_currentUser - In the implementation block
@property (nonatomic,retain) NSMutableSet * authenticatedUsers;              //@synthesize authenticatedUsers=_authenticatedUsers - In the implementation block
@property (nonatomic,retain) IGCookieStorage * cookieStorage;                //@synthesize cookieStorage=_cookieStorage - In the implementation block
+(id)sharedAuthHelper;
+(void)migrateOldCurrentUser;
+(id)userSessionCookiesPredicate;
-(IGUser *)currentUser;
-(char)currentUserIsLoggedIn;
-(void)logInWithDictionary:(id)arg1 ;
-(char)hasMultipleAccounts;
-(void)switchToAuthenticatedUser:(id)arg1 failureBlock:(/*^block*/id)arg2 ;
-(void)handleLoginRequiredByServer;
-(void)logOutWithCompletionHandler:(/*^block*/id)arg1 ;
-(NSMutableSet *)authenticatedUsers;
-(void)unarchiveUsers;
-(void)storeLastUserPK:(id)arg1 ;
-(id)oldCurrentUser;
-(id)storedUsers;
-(void)storeAuthenticatedUsers:(id)arg1 ;
-(void)removeOldUserData;
-(void)setAuthenticatedUsers:(NSMutableSet *)arg1 ;
-(id)lastUserPK;
-(IGCookieStorage *)cookieStorage;
-(void)synchronizeUserWithKeychain:(id)arg1 ;
-(char)passesMultipleAccountsQE;
-(void)switchToAuthenticatedUserWithForce:(id)arg1 ;
-(void)handleLoginError;
-(void)postWillSwitchUsersNotification;
-(void)swapFromCookiesOfUserWithPk:(id)arg1 toCookiesOfUserWithPk:(id)arg2 ;
-(void)updateCurrentUser:(id)arg1 ;
-(void)postDidSwitchUsersNotificationForNewUserPK:(id)arg1 ;
-(void)postSuccessfulLoginNotificationForUserID:(id)arg1 isSwitchingUsers:(char)arg2 ;
-(void)logInWithAuthenticatedUser:(id)arg1 isSwitchingUsers:(char)arg2 ;
-(void)saveCookiesForInternalUsers;
-(void)logInWithDictionary:(id)arg1 isSwitchingUsers:(char)arg2 ;
-(void)clearCurrentUser;
-(void)switchToAnyAuthenticatedUserWithForce;
-(void)logOutUser:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)sendServerLogoutRequestForUserWithPK:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)clearAllUsers;
-(void)doLocalLogoutForUser:(id)arg1 ;
-(id)profilePictureDataFromImage:(id)arg1 ;
-(void)onProfilePictureChanged:(id)arg1 ;
-(void)onProfilePictureFailed:(id)arg1 ;
-(char)cookiesAreValidForUserID:(id)arg1 ;
-(void)logInWithAuthenticatedUser:(id)arg1 ;
-(void)uploadProfilePicture:(id)arg1 ;
-(void)removeProfilePicture;
-(void)changePrivacySetting:(char)arg1 successHandler:(/*^block*/id)arg2 failureHandler:(/*^block*/id)arg3 ;
-(void)changeProfanityFilterSetting:(char)arg1 successHandler:(/*^block*/id)arg2 failureHandler:(/*^block*/id)arg3 ;
-(void)getProfanityFilterSetting:(/*^block*/id)arg1 failureHandler:(/*^block*/id)arg2 ;
-(void)setCurrentUser:(IGUser *)arg1 ;
-(id)init;
-(void)setCookieStorage:(IGCookieStorage *)arg1 ;
-(id)uniqueID;
-(void)archive;
@end

